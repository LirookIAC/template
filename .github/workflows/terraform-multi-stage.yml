name: Terraform Apply
on:
  workflow_dispatch:
jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      BACKEND_RESOURCE_GROUP_NAME: ${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}
      BACKEND_STORAGE_ACCOUNT_NAME: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
      BACKEND_STORAGE_CONTAINER_NAME: ${{ secrets.BACKEND_STORAGE_CONTAINER_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables and construct TF_BACKEND_KEY
        working-directory: src/terraform
        run: |
          ApplicationName=$(grep '^ApplicationName =' backend.tfvars | sed 's/ApplicationName = "\(.*\)"/\1/')
          EnvironmentName=$(grep '^EnvironmentName =' backend.tfvars | sed 's/EnvironmentName = "\(.*\)"/\1/')
          echo "ApplicationName=${ApplicationName}" >> $GITHUB_ENV
          echo "EnvironmentName=${EnvironmentName}" >> $GITHUB_ENV
          TF_BACKEND_KEY="${ApplicationName}-${EnvironmentName}.tfplan"
          echo "TF_BACKEND_KEY=${TF_BACKEND_KEY}" >> $GITHUB_ENV
        shell: bash

      - name: Terraform Validate
        working-directory: src/terraform
        run: |
          chmod +x ../../.github/workflows/scripts/terraform-with-backend.sh
          ../../.github/workflows/scripts/terraform-with-backend.sh validate

      - name: Terraform Plan
        working-directory: src/terraform
        run: |
          chmod +x ../../.github/workflows/scripts/terraform-with-backend.sh
          ../../.github/workflows/scripts/terraform-with-backend.sh plan -var-file=backend.tfvars -out=${{ env.TF_BACKEND_KEY }}


      - name: Upload Terraform Plan as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: src/terraform/${{ env.TF_BACKEND_KEY }}

  apply:
    environment : production
    needs : plan
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      BACKEND_RESOURCE_GROUP_NAME: ${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}
      BACKEND_STORAGE_ACCOUNT_NAME: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
      BACKEND_STORAGE_CONTAINER_NAME: ${{ secrets.BACKEND_STORAGE_CONTAINER_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables and construct TF_BACKEND_KEY
        working-directory: src/terraform
        run: |
          ApplicationName=$(grep '^ApplicationName =' backend.tfvars | sed 's/ApplicationName = "\(.*\)"/\1/')
          EnvironmentName=$(grep '^EnvironmentName =' backend.tfvars | sed 's/EnvironmentName = "\(.*\)"/\1/')
          echo "ApplicationName=${ApplicationName}" >> $GITHUB_ENV
          echo "EnvironmentName=${EnvironmentName}" >> $GITHUB_ENV
          TF_BACKEND_KEY="${ApplicationName}-${EnvironmentName}.tfplan"
          echo "TF_BACKEND_KEY=${TF_BACKEND_KEY}" >> $GITHUB_ENV
        shell: bash

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: src/terraform

      - name: Terraform Validate
        working-directory: src/terraform
        run: |
          chmod +x ../../.github/workflows/scripts/terraform-with-backend.sh
          ../../.github/workflows/scripts/terraform-with-backend.sh validate

      - name: Terraform Apply
        working-directory: src/terraform
        run: |
          chmod +x ../../.github/workflows/scripts/terraform-with-backend.sh
          ../../.github/workflows/scripts/terraform-with-backend.sh apply -auto-approve "${{ env.TF_BACKEND_KEY }}"

